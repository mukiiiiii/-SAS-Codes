
/* Include Setup file */
%include '/mnt/Code/Project_necessity/setup.sas';

 
%let x = %sysfunc(ranuni(0));
%let rand = %sysfunc(round(&x*1000,1));
%let current_date = %sysfunc(date(), yymmddn8.);
%let current_time = %sysfunc(time(), hhmmssn6.);
 
data mwrk.blank;
input measure $ 10. col_name $ 10.;
datalines;
blank
;
 
data mwrk._label_;
infile datalines truncover;
input Measure $ 32767. col_name $ 1000.;
datalines;
blank
;
run;
 
proc delete data=wrk.appnd_base_&rand.;
run;
 
%macro reg(title1=,cond1=);
 
%macro master(var=, 
			  dataset=,
			  type=,
			  AddCond=1,
			  AddCond2=1,
			  Title=,
			  Label='',
			  MstrDS=0,
			  Appnd=0,
			  Blnk=0,
			  Mclass=,
			  frmt=,
			  order=desc, 
			  percentage=.,
			  months=.,
			  ffcond=1,
			  var2=,
			  comparision_data=);
 
%if &var = dummy %then %do;
%goto dummylines ;
%end;
 
/*=======================================master dataset=============================================*/
 
%if &MstrDS. = 0 %then %do; 
 
/*creating master-the master data set is generated by calling the relavent output step on the dataset(final dataset) without any conditions */
 
     %if &type. = 1 %then %do;
 
           proc freq data= &dataset. noprint;
           tables &var. / out=mwrk.&var._&title1._master(rename=(&var.= measure) drop=count percent);
		   &frmt.
			where not missing(&var.) and &ffcond. and &AddCond.;
			run;
			
		   data mwrk.&var._&title1._master;
		   Set mwrk.&var._&title1._master;
		   col_name = measure;
		   run;
     %END;
 
     %if &type. = 2 %then %do;
 
           proc means data=&dataset. noprint;
           var &var.;
           output out=mwrk.temp&rand.(drop=_type_ _freq_) n=N nmiss=NMISS mean=MEAN std=STD median=MED q1=Q1 q3=Q3  
           												  qrange=IQR min=MIN max=MAX sum=SUM;
           run;
 
           proc transpose data=mwrk.temp&rand. out=mwrk.&var._&title1._master(keep= measure) name=measure;
           run;
           
		   data mwrk.&var._&title1._master;
		   Set mwrk.&var._&title1._master;
		   col_name = measure;
		   run;
 
     %END;
 
     %if &type. = 3 or &type. = 4 %then %do;
 
           proc sql;
           create table mwrk.temp&rand. as
           select count(&var.) as count_&var._&Title.
           from &dataset;
           quit;
 
           proc transpose data=mwrk.temp&rand. out=mwrk.&var._&title1._master(keep= measure) name=measure;
           run;
           
		   data mwrk.&var._&title1._master;
		   Set mwrk.&var._&title1._master;
		   col_name = &label.;
		   run;
 
     %END;
 
     %if &type. = 5  %then %do;
 
           proc sql;
           create table mwrk.temp&rand. as
           select sum(&var) as sum_&var
           from &dataset;
           quit;
 
           proc transpose data=mwrk.temp&rand. out=mwrk.&var._&title1._master(keep= measure) name=measure;
           run;
           
		   data mwrk.&var._&title1._master;
		   Set mwrk.&var._&title1._master;
		   col_name = &label.;
		   run;
    
     %END;
	 %if &type. = 6	%then %do;
 
		ods select none;
 
		proc univariate	data=&dataset;
		var &var;
		ods output TestsForLocation=mwrk.wilcox&rand.;
		run;
 
		data mwrk.temp&rand.(rename=(Test=Measure pValue=value));
		set mwrk.wilcox&rand. (keep= Test pValue ) ;
		if Test	= "Signed Rank"	then output;
		run;
 
		data mwrk.&var._&title1._master(keep=measure);
		set mwrk.TEMP&rand.;
		run;
		
	   data mwrk.&var._&title1._master;
	   Set mwrk.&var._&title1._master;
	   col_name = &label.;
	   run;
		
		ods select all;
 
		%END;
 
 
		%if &type. = 7	%then %do;
 
		ODS SELECT NONE;
		
		Proc freq data=&dataset;
		Table &var*&var2/chisq ;
		ods output ChiSq = mwrk.temp&rand.;
		Run;
 
		ODS SELECT ALL;
 
		data mwrk.temp&rand.2(rename=(Statistic=Measure	prob=value));
		set mwrk.temp&rand.(keep=Statistic prob);
		if Statistic = "Chi-Square" then output;
		run;
 
		data mwrk.&var._&title1._master(keep=measure);
		set mwrk.TEMP&rand.2;
		run;
 
	   data mwrk.&var._&title1._master;
	   Set mwrk.&var._&title1._master;
	   col_name = &label.;
	   run;
 
		%END;
 
		%if &type. = 8	%then %do;
 
		proc sql;
		create table mwrk.TEMP&rand. as
		select sum(&var) as sum_&var
		from &dataset
		quit;
 
		proc transpose data=mwrk.TEMP&rand. out=mwrk.&var._&title1._master(keep= measure) name=measure;
		run;
		
	    data mwrk.&var._&title1._master;
	    Set mwrk.&var._&title1._master;
	    col_name = &label.;
	    run;
		
 
		%END;
 
 
		%if &type. = 9	%then %do;
 
 		data mwrk.&var._&title1._master;
		measure = "difference";
		run;
		
		data mwrk.&var._&title1._master;
		Set mwrk.&var._&title1._master;
		col_name = &label.;
		run;
		
 
		%END;
		
 
%END;
 
/*if then master dataset need to be created and assigned manually this code runs */
 
%else %DO ; 
 
     data mwrk.&var._&title1._master;
     set &MstrDS.; 
     
 %if &type.=2 %then %do;	
     col_name = measure;
  %end;
     run;
 	 
%end;
 
%macro prog(title3=,cond3=);
 
%macro cohort(title2=,cond2=);
 
/*=====================================output generation==============================================*/
 
/*macro part for freq procedure*/
%if &type. = 1 %then %do;
     
     proc freq data= &dataset. noprint;
     tables &var / out=mwrk.&var._&title1._&title2._&title3.(rename=(count=&title3._&title2. &var.= measure) drop= percent);
     &frmt.
     where &cond1. and &cond2. and &cond3. and &AddCond. and not missing(&var.);
     run;
 
     data mwrk.&var._&title1._&title2._&title3.;
     set mwrk.&var._&title1._&title2._&title3.;
     
     %if &percentage. =. %then %do;
		&title3._&title2._rep =.;
	 %end;
	 %else %do;
	      %if (&&count_&percentage._&title2. > 0) %then %do;
    		 &title3._&title2._rep = (&title3._&title2./&&count_&percentage._&title2.);
    	  %end;
    	  %else %do;
    	  	&title3._&title2._rep =.;
    	  %end;
     %end;
 	run;
 	
 	data mwrk._label_;
	set mwrk._label_; 
	col_name = &label.;
	run;
    
%END;
 
/*macro part for the means procedure*/
%if &type. = 2 %then %do;
 
     proc means data=&dataset. noprint;
     &Mclass
     var &var.;
     output out=mwrk.temp&rand.(drop=_type_ _freq_) n=N nmiss=NMISS mean=MEAN std=STD median=MED q1=Q1 q3=Q3  qrange=IQR min=MIN max=MAX sum=SUM;
     &frmt.
     where &cond1. and &cond2. and &cond3. and &AddCond.;
     run;
 	 
 	 	/*  Adding Global Variable	 */
 	%global count_&title._&title2.;
	data _null_;
    set mwrk.temp&rand.;
    call symput ("count_&title._&title2." ,put(N, 9.));
    run;  
    
     proc transpose data=mwrk.temp&rand. out= mwrk.&var._&title1._&title2._&title3.(rename=(COL1=&title3._&title2.)) name=measure;
     run;
 
     data mwrk.&var._&title1._&title2._&title3.;
     set mwrk.&var._&title1._&title2._&title3.;
     format &title3._&title2. : best32. ;
 
     &title3._&title2. = coalesce(&title3._&title2.,.);
     
   	if measure='N' then do;
     	 %if &percentage. =. %then %do;
	     	&title3._&title2._rep =.;
		 %end;
		 %else %do;
		      %if (&&count_&percentage._&title2. > 0) %then %do;
	    		 &title3._&title2._rep = (&title3._&title2./&&count_&percentage._&title2.);
	    	  %end;
	    	  %else %do;
	    	  	&title3._&title2._rep =.;
    	  	  %end;
    	  %end;
    end;
    
     else do;
	     %if &months. =. %then %do;
	     	&title3._&title2._rep =.;
		 %end;
		 %else %do;
		      &title3._&title2._rep = (&title3._&title2./&months.);
		 %end;
	 end;
     run;
	
	data mwrk._label_;
	set mwrk._label_; 
	col_name = &label.;
	run;
%END;
 
/*macro part for the select count */
%if &type. = 3 %then %do;
 
     proc sql;
     create table mwrk.temp&rand. as
     select count(&var) as count_&var._&Title.
     from &dataset
     where &cond1. and &cond2. and &cond3. and &AddCond.;
     quit;
 	
	/*  Adding Global Variable	 */
 	%global count_&title._&title2.;
	data _null_;
    set mwrk.temp&rand.;
    call symput ("count_&title._&title2." , put(count_&var._&Title., 9.));
    run;  
    
     proc transpose data=mwrk.temp&rand. out= mwrk.temp&rand.2 (rename=(COL1=&title3._&title2.)) name=measure;
     run;
 
     data mwrk.&var._&title1._&title2._&title3.;
     set mwrk.temp&rand.2;
 
     %if &percentage. =. %then %do;
          &title3._&title2._rep =.;
     %end;
     %else %do;
	      %if (&&count_&percentage._&title2. > 0) %then %do;
    		 &title3._&title2._rep = (&title3._&title2./&&count_&percentage._&title2.);
    	  %end;
    	  %else %do;
    	  	&title3._&title2._rep =.;
    	  %end;
      %end;
     run;
 
%END;
 
/*macro part for the select distinct count */
 
%if &type. = 4 %then %do;
 
     proc sql;
     create table mwrk.temp&rand. as
     select count(distinct &var) as count_&var._&Title.
     from &dataset
     where &cond1. and &cond2. and &cond3. and &AddCond.;
     quit;
 	 
 	%global count_&title._&title2.;
 	
	 	data _null_;
	    set mwrk.temp&rand.;
	    call symput ("count_&title._&title2." , put(count_&var._&Title., 9.));
	    run;  
    
/*   %put &&&count_&title._&title2.; */
     proc transpose data=mwrk.temp&rand. out= mwrk.temp&rand.2(rename=(COL1=&title3._&title2.)) name=measure;
     run;    
 
     data mwrk.&var._&title1._&title2._&title3.;
     set mwrk.temp&rand.2;
 
     %if &percentage. =. %then %do;
          &title3._&title2._rep =.;
     %end;
     %else %do;
	      %if (&&count_&percentage._&title2. > 0) %then %do;
    		 &title3._&title2._rep = (&title3._&title2./&&count_&percentage._&title2.);
    	  %end;
    	  %else %do;
    	  	&title3._&title2._rep =.;
    	  %end;   
     %end;
     run;
 
%END;
 
/*macro part for the select Sum */
%if &type. = 5 %then %do;
 
     proc sql;
     create table mwrk.temp&rand. as
     select sum(&var) as sum_&var
     from &dataset
     where &cond1. and &cond2. and &cond3. and &AddCond.;
     quit;
 
     proc transpose data=mwrk.temp&rand. out= mwrk.temp&rand.2(rename=(COL1=&title3._&title2.)) name=measure;
     run;
 
     data mwrk.&var._&title1._&title2._&title3.;
     set mwrk.temp&rand.2;
     
     %if &percentage. =. %then %do;
          &title3._&title2._rep =.;
     %end;
     %else %do;
	      %if (&&count_&percentage._&title2. > 0) %then %do;
    		 &title3._&title2._rep = (&title3._&title2./&&count_&percentage._&title2.);
    	  %end;
    	  %else %do;
    	  	&title3._&title2._rep =.;
    	  %end;   
     %end;
     run;
 
%END;
 
%if &type. = 6	%then %do;
 
	ods select none;
 
	proc univariate	data=&dataset;
	var &var;
	where &cond1. and &cond2. and &cond3. and &AddCond.;
	ods output TestsForLocation=mwrk.wilcox&rand.;
	run;
	ods select all;
 
	data mwrk.temp&rand.(rename=(Test=Measure pValue=value));
	set mwrk.wilcox&rand. (keep= Test pValue ) ;
	if Test	= "Signed Rank"	then output;
	run;
 
	data mwrk.&var._&title1._&title2._&title3.(rename=(value=&title3._&title2.));
	set mwrk.TEMP&rand.;
	run;
 
	data mwrk.&var._&title1._&title2._&title3.;
	set mwrk.&var._&title1._&title2._&title3.;
	&title3._&title2. = coalesce(&title3._&title2.,.);
	&title3._&title2._rep =.;
	run;
 
	data mwrk.wilcox&rand.;
	set mwrk.wilcox&rand.;
	if Test	= "Signed Rank" then pValue=.;
	run;
 	
 	proc delete data = mwrk.wilcox&rand.;
    run;
 
%END;
 
%if &type. = 7	%then %do;
 
	ODS SELECT NONE;
	Proc freq data=&dataset;
	Table &var.*&var2./chisq ;
	where &cond1. and &cond2. and &cond3. and &AddCond.;
	ods output ChiSq = mwrk.chi&rand.;
	Run;
	ODS SELECT ALL;
 
	data mwrk.temp&rand.1(rename=(Statistic=Measure	prob=value));
	set mwrk.chi&rand.(keep=Statistic prob);
	if Statistic = "Chi-Square" then output;
	run;
 
	data mwrk.&var._&title1._&title2._&title3.(rename=(value=&title3._&title2.));
	set mwrk.TEMP&rand.1;
	run;
 
	data mwrk.&var._&title1._&title2._&title3.;
	set mwrk.&var._&title1._&title2._&title3.;
	&title3._&title2. = coalesce(&title3._&title2.,.);
	&title3._&title2._rep =.;
	run;
 
	data mwrk.chi&rand.;
	set mwrk.chi&rand.;
	if Statistic = "Chi-Square" then prob=.;
	run;
 	
 	proc delete data = mwrk.chi&rand.;
 	run;
 	
%END;
 
 
%if &type. = 8 %then %do;
 
		proc sql;
		create table mwrk.TEMP&rand. as
		select sum(&var.) as sum_&var.
		from &dataset
		where &cond1. and &cond2. and &cond3. and &AddCond.;
		quit;
 
		proc transpose data=mwrk.TEMP&rand. out= mwrk.temp&rand.1(rename=(COL1=&title3._&title2.)) name=measure;
		run;
 
		proc sql;
		create table mwrk.TEMP&rand.2 as
		select sum(&var2.) as sum_&var.
		from &dataset
		where &cond1. and &cond2. and &cond3. and &AddCond.;
		quit;
 
		proc transpose data=mwrk.TEMP&rand.2 out= mwrk.temp&rand.3(rename=(COL1=&title3._&title2._rep)) name=measure;
		run;
 
		proc sql undo_policy=none;
		create table mwrk.&var._&title1._&title2._&title3. as
		select a.measure,a.&title3._&title2., b.&title3._&title2._rep
		from mwrk.temp&rand.1 as a inner join mwrk.temp&rand.3 as b
		on a.measure = b.measure;
		quit;
 
		data mwrk.&var._&title1._&title2._&title3.(drop=change);
		set  mwrk.&var._&title1._&title2._&title3.(rename=(&title3._&title2._rep=change));
		&title3._&title2._rep=(change/(&title3._&title2.-change));
		run;
 
%END;
 
 
 
%if &type. = 9	%then %do;
 
	%let dif_cnt_1 = .;
	%let dif_cnt_2 = .;
	 
	ods select none ;
	proc sql;
	select count(&var.) into : diff_cnt_1 from &dataset. 
	where &cond1. and &cond2. and &cond3. and &AddCond.;
	 
	select count(&var.) into : diff_cnt_2 from &comparision_data. 
	where &cond1. and &cond2. and &cond3. and &AddCond2.;
	quit;
	ods select all;
	 
	%let diff_final= %eval (&diff_cnt_1. - &diff_cnt_2.);
	 
	 	%global count_&title._&title2.;
	 	%let count_&title._&title2. = &diff_final.;
	
	data mwrk.&var._&title1._&title2._&title3.;
	measure = "difference";
	&title3._&title2. = %eval(&diff_final.);
	
	     %if &percentage. =. %then %do;
	          &title3._&title2._rep =.;
	     %end;
	     %else %do;
		      %if (&&count_&percentage._&title2. > 0) %then %do;
	    		 &title3._&title2._rep = (&title3._&title2./&&count_&percentage._&title2.);
	    	  %end;
	    	  %else %do;
	    	  	&title3._&title2._rep =.;
	    	  %end;   
	     %end;
	run;
 
 
%END;
/*=====================================================================================================================*/
 
	data mwrk.&var._&title1._&title2._&title3.;
	format &title3._&title2. $ 32767. &title3._&title2._rep $10. Type 9.;
	
	set mwrk.&var._&title1._&title2._&title3.
	     (rename=(&title3._&title2.=col1 
	     		  &title3._&title2._rep=col2));
	 
	Type= &type.;
	 
	&title3._&title2._rep = put(col2, 10.4) ;
	
	%if &type. = 1 %then %do;
		if &title3._&title2._rep =. then &title3._&title2._rep = "0";
	%end;
	%else %do;
		if &title3._&title2._rep =. then &title3._&title2._rep = "-";
	%end;
	 
	%if &type. = 2 %then %do;
	&title3._&title2. = put(col1, best32.);
		if &title3._&title2. = . then do;
			if measure ="N" or measure ="NMISS" then &title3._&title2. = "0";
			else &title3._&title2. = "-";
		end;
	%end;
	 
	%else %if (&type. = 6 or &type. = 7) %then %do;
	%put type is &type.;
		&title3._&title2. = put(col1, PVALUE6.4);
	%end;
	 
	%else %do;
	%put type is &type.;
		if col1 = . then col1 = 0;
		&title3._&title2. = put(col1, 8.0);
	%end;
	run;
 
/*========================================merging and removing=========================================================*/
 
/*merging all the different cohorts*/
 
	proc sql undo_policy=none;
		create table mwrk.&var._&title1._master as
		select a.*, 	b.&title3._&title2., 
	
	 	%if %length(&percentage.)<0 %then %do;
	 		Case when b.type = 8 then put(b.col2, percent32.6) else "-" end as &title3._&title2._rep
		%end;
		%else %do;
		Case when missing(b.type) and missing(b.col2) then put(0, percent32.6)
			 when b.type ne 1 and missing(b.col2) then "-"
			%if &type. = 2 %then %do;
			 when b.type = 2 and (a.measure^="N" and a.measure^="NMISS") then put(b.col2, 32.8)
			%end;
		else put(b.col2, percent32.6)
	        end as &title3._&title2._rep
	    %end;
		from mwrk.&var._&title1._master as a
		left join mwrk.&var._&title1._&title2._&title3. as b
		on a.measure = b.measure;
	quit;
	 
	 
		data mwrk.&var._&title1._master;
		set mwrk.&var._&title1._master;
		if &title3._&title2._rep ="" then &title3._&title2._rep ="-";
		if &title3._&title2. = "" then &title3._&title2. = "0";
		run;
 
 
/*removing all datasets created- and supressing warning for the same */
ods select none;
 
	proc delete data= mwrk.&var._&title1._&title2._&title3.;
	run;
	proc delete data= mwrk.temp&rand.;
	run;
	proc delete data= mwrk.temp&rand.1;
    run;
	proc delete data= mwrk.temp&rand.2;
	run;
	proc delete data= mwrk.temp&rand.3;
	run;
 
ods select all;
%mend cohort;
 

 /* total Patients in the cohort */
%cohort(title2 = All, cond2 = 1);
%cohort(title2 = nyha_1, cond2 = nyha_val = '1');
%cohort(title2 = nyha_2, cond2 = nyha_val = '2');
%cohort(title2 = nyha_3, cond2 = nyha_val = '3');
%cohort(title2 = nyha_4, cond2 = nyha_val = '4');
%cohort(title2 = nyha_3_4, cond2 = (nyha_val = '3' or nyha_val = '4'));





%mend prog;
 
%prog(title3=all,cond3=1);
 
 
/*===============rearranging the means procedure output==================*/
 
%if &type.=2 %then %do;
 
	 data mwrk.&var._&title1._master;
     set mwrk.&var._&title1._master;
     format col $300. ;
 
			if strip(upcase(measure))="N" then
				order=1;
			else if strip(upcase(measure))="NMISS" then
				order=2;
			else if strip(upcase(measure))="MEAN" then do;
				order=3;
				col="Mean";
			end;
			else if strip(upcase(measure))="MED" then do;
				order=4;
				col="Median";
			end;
			else if strip(upcase(measure))="STD" then do;
				order=5;
				col="Standard Deviation";
			end;
			else if strip(upcase(measure))="MIN" then do;
				order=6;
				col="Minimum";
			end;
			else if strip(upcase(measure))="MAX" then do;
				order=7;
				col="Maximum";
			end;
			else if strip(upcase(measure))="Q1" then
				order=8;
			else if strip(upcase(measure))="Q3" then
				order=9;
			else if strip(upcase(measure))="IQR" then
				order=10;
			else if strip(upcase(measure))="SUM" then
				order=11;
			
			if missing(col) then col=col_name;
			drop col_name;
			rename col=col_name;
	 run;
 
 
     proc sort data=mwrk.&var._&title1._master;
     by order;
     run;
 
     data mwrk.&var._&title1._master(drop= order);
     set mwrk.&var._&title1._master;
     run;
 		
%END;
 
/*=======================rename missing process=================== */
 
%if &type. = 1 %then %do;
 
	proc contents data=mwrk.&var._&title1._master out=mwrk.temp&rand.3(keep=name type) noprint ;
	run;
	proc sql;
	              Create table mwrk.&var._&title1._master as
	              Select * from mwrk.&var._&title1._master
	              order by 3 &order.;
	run;
	 
	%let nmbr_flg =0;
	 
	 
	data mwrk.temp&rand.3;
	set mwrk.temp&rand.3;
	if upcase(name)="MEASURE" and type =1 then do;
	call symput('nmbr_flg',1);
	end;
	run;
	 
	%if &nmbr_flg. =1 %then %do ;
	 
	 
		data mwrk.&var._&title1._master;
		set mwrk.&var._&title1._master;
		mes = put(measure, 10.) ;
		col = mes;
		drop measure col_name;
		rename mes=measure col=col_name; 
		run;
		 
		data mwrk.&var._&title1._master;
		retain measure;
		set mwrk.&var._&title1._master;
		run;
		 
		data mwrk.&var._&title1._master;
		set mwrk.&var._&title1._master;
		if measure = . then 
		measure = "missing";
		else measure = measure;
		run;
		 
		proc delete data = mwrk.temp&rand.3;
		run;
	 
	%end;
%end;
 
 
/*==================creating dummy lines from blanks=======================*/
 
	%dummylines: %put moving to dummylines;
	%if &var. = dummy %then %do ;
		data mwrk.&var._&title1._master; 
		set mwrk._label_;
		if measure = "blank" then measure = "dummy";
		col_name = &label.;
		run;
	%end;
 
/*==================appending step for Apnd variable=======================*/

%if &Appnd = start %then
	%do;
		%if %sysfunc(exist(mwrk.appnd_base_&rand.)) %then
			%do;
		 				 				
 			/*  Add Column name = Label name For N */
			%if (&type.=1 or &type.=2) and %length(&label.)>2 %then %do;
			     proc append base=mwrk.appnd_base_&rand. data=mwrk._label_ force nowarn;
			     run;
		 	%end;
		 		
				proc append base=mwrk.appnd_base_&rand. data=mwrk.&var._&title1._master force nowarn;
				run;
 
			%end;
		%else
			%do;
 				
				data mwrk.appnd_base_&rand.;
					set mwrk.&var._&title1._master;
				run;
 
			%end;
	%END;
 
%if &Appnd = end %then
	%do;
 		
 		%if (&type.=1 or &type.=2) and %length(&Label.)>2 %then %do;
			     proc append base=mwrk.appnd_base_&rand. data=mwrk._label_ force nowarn;
			     run;
		%end;
		 		
 		
		proc append base=mwrk.appnd_base_&rand. data=mwrk.&var._&title1._master force nowarn;
		run;
 
		data mwrk.&var._&title1._master;
			set mwrk.appnd_base_&rand.;
		run;
 
		proc delete data=mwrk.appnd_base_&rand.;
		run;
 
	%END;
	
	
		
/*==========================blank line process======================= */
%if &Blnk. ne 0 %then %do ;
 
     %if &Appnd=start %then %do ;
           %let BlnkDs=mwrk.appnd_base_&rand.;
     %end;
 
     %else %do;
           %let BlnkDs=mwrk.&var._&title1._master;
     %end;
 
     %do i=1 %to %eval(&Blnk.);
 
           proc append base=&BlnkDs. data=mwrk.blank force nowarn;
           run;
 			
     %end;
 
%END;
 
%macro deleteALL;
 
   	options nonotes;
 
  	%local vars;
 
  	proc sql noprint;
      	     select name into: vars separated by ' '
         	  from dictionary.macros
            	      where scope='GLOBAL' 
			   and upcase(name) like "COUNT%";
   	quit;
 
   	%symdel &vars;
 
   	options notes;
 
    	%put NOTE: Macro variables deleted.;
 
%mend deleteALL;
 
/*===========final print out for tables============*/
 
%if &Appnd. ne start %then %do;
 
     title "&title1. master output:&Title. as &var. and &type.";
     proc print data=mwrk.&var._&title1._master noobs;
     run;
     title;

 	*HEOR Output Table Stored for Future reference;
 	 Data mwrk.HEOR_&current_date._&current_time.;
     set mwrk.&var._&title1._master;
     run;
     
     proc delete data= mwrk.&var._&title1._master;
     run;
     
 	 %deleteALL;
%END;
 
/*=======================================================================================================*/
%mend master;

/* total Patients in the cohort */
%cohort(title2 = All, cond2 = 1);
%cohort(title2 = nyha_1, cond2 = nyha_val = '1');
%cohort(title2 = nyha_2, cond2 = nyha_val = '2');
%cohort(title2 = nyha_3, cond2 = nyha_val = '3');
%cohort(title2 = nyha_4, cond2 = nyha_val = '4');
%cohort(title2 = nyha_3_4, cond2 = (nyha_val = '3' or nyha_val = '4'));


%mend prog;

%prog(title3=all,cond3=1);


/*===============rearranging the means procedure output==================*/

%if &type.=2 %then %do;

	 data mwrk.&var._&title1._master;
     set mwrk.&var._&title1._master;
     format col $300. ;

			if strip(upcase(measure))="N" then
				order=1;
			else if strip(upcase(measure))="NMISS" then
				order=2;
			else if strip(upcase(measure))="MEAN" then do;
				order=3;
				col="Mean";
			end;
			else if strip(upcase(measure))="MED" then do;
				order=4;
				col="Median";
			end;
			else if strip(upcase(measure))="STD" then do;
				order=5;
				col="Standard Deviation";
			end;
			else if strip(upcase(measure))="MIN" then do;
				order=6;
				col="Minimum";
			end;
			else if strip(upcase(measure))="MAX" then do;
				order=7;
				col="Maximum";
			end;
			else if strip(upcase(measure))="Q1" then
				order=8;
			else if strip(upcase(measure))="Q3" then
				order=9;
			else if strip(upcase(measure))="IQR" then
				order=10;
			else if strip(upcase(measure))="SUM" then
				order=11;
			
			if missing(col) then col=col_name;
			drop col_name;
			rename col=col_name;
	 run;


     proc sort data=mwrk.&var._&title1._master;
     by order;
     run;

     data mwrk.&var._&title1._master(drop= order);
     set mwrk.&var._&title1._master;
     run;

%END;

/*=======================rename missing process===================*/

%if &type. = 1 %then %do;

	proc contents data=mwrk.&var._&title1._master out=mwrk.temp&rand.3(keep=name type) noprint ;
	run;
	proc sql;
	              Create table mwrk.&var._&title1._master as
	              Select * from mwrk.&var._&title1._master
	              order by 3 &order.;
	run;
	 
	%let nmbr_flg =0;
	 
	 
	data mwrk.temp&rand.3;
	set mwrk.temp&rand.3;
	if upcase(name)="MEASURE" and type =1 then do;
	call symput('nmbr_flg',1);
	end;
	run;
	 
	%if &nmbr_flg. =1 %then %do ;
	 
	 
		data mwrk.&var._&title1._master;
		set mwrk.&var._&title1._master;
		mes = put(measure, 10.) ;
		col = mes;
		drop measure col_name;
		rename mes=measure col=col_name; 
		run;
		 
		data mwrk.&var._&title1._master;
		retain measure;
		set mwrk.&var._&title1._master;
		run;
		 
		data mwrk.&var._&title1._master;
		set mwrk.&var._&title1._master;
		if measure = . then 
		measure = "missing";
		else measure = measure;
		run;
		 
		proc delete data = mwrk.temp&rand.3;
		run;
	 
	%end;
%end;


/*==================creating dummy lines from blanks=======================*/

	%dummylines: %put moving to dummylines;
	%if &var. = dummy %then %do ;
		data mwrk.&var._&title1._master; 
		set mwrk._label_;
		if measure = "blank" then measure = "dummy";
		col_name = &label.;
		run;
	%end;

/*==================appending step for Apnd variable=======================*/

%if &Appnd = start %then
	%do;
		%if %sysfunc(exist(mwrk.appnd_base_&rand.)) %then
			%do;
		 				 				
 			/*  Add Column name = Label name For N */
			%if (&type.=1 or &type.=2) and %length(&label.)>2 %then %do;
			     proc append base=mwrk.appnd_base_&rand. data=mwrk._label_ force nowarn;
			     run;
		 	%end;
		 		
				proc append base=mwrk.appnd_base_&rand. data=mwrk.&var._&title1._master force nowarn;
				run;

			%end;
		%else
			%do;
 				
				data mwrk.appnd_base_&rand.;
					set mwrk.&var._&title1._master;
				run;

			%end;
	%END;

%if &Appnd = end %then
	%do;
 		
 		%if (&type.=1 or &type.=2) and %length(&Label.)>2 %then %do;
			     proc append base=mwrk.appnd_base_&rand. data=mwrk._label_ force nowarn;
			     run;
		%end;
		 		
 		
		proc append base=mwrk.appnd_base_&rand. data=mwrk.&var._&title1._master force nowarn;
		run;

		data mwrk.&var._&title1._master;
			set mwrk.appnd_base_&rand.;
		run;

		proc delete data=mwrk.appnd_base_&rand.;
		run;

	%END;
	
	
		
/*==========================blank line process======================= */
%if &Blnk. ne 0 %then %do ;

     %if &Appnd=start %then %do ;
           %let BlnkDs=mwrk.appnd_base_&rand.;
     %end;

     %else %do;
           %let BlnkDs=mwrk.&var._&title1._master;
     %end;

     %do i=1 %to %eval(&Blnk.);

           proc append base=&BlnkDs. data=mwrk.blank force nowarn;
           run;
 			
     %end;

%END;

%macro deleteALL;

   	options nonotes;

  	%local vars;

  	proc sql noprint;
      	     select name into: vars separated by ' '
         	  from dictionary.macros
            	      where scope='GLOBAL' 
			   and upcase(name) like "COUNT%";
   	quit;

   	%symdel &vars;

   	options notes;

    	%put NOTE: Macro variables deleted.;

%mend deleteALL;

/*===========final print out for tables============*/

%if &Appnd. ne start %then %do;

     title "&title1. master output:&Title. as &var. and &type.";
     proc print data=mwrk.&var._&title1._master noobs;
     run;
     title;

 	*HEOR Output Table Stored for Future reference;
 	 Data mwrk.HEOR_&current_date._&current_time.;
     set mwrk.&var._&title1._master;
     run;

     proc delete data= mwrk.&var._&title1._master;
     run;

 	 %deleteALL;
%END;

/*=======================================================================================================*/
%mend master;
